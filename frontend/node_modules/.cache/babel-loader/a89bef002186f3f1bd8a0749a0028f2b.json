{"ast":null,"code":"import _slicedToArray from \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\src\\\\components\\\\TasksPage\\\\TaskDetailsPage.js\";\nimport React, { useEffect } from \"react\";\nimport { Fragment, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditTask from \"./EditTask\";\nimport AddSubtask from \"../NewTaskPage/AddSubtask\";\nimport Header from \"../Header\";\nimport TaskSettings from \"../NewTaskPage/TaskSettings\";\nimport ScrollTop from \"../ScrollTop\";\n//import classes from \"./SaveButton.module.css\";\nimport { Link } from \"react-router-dom\";\nvar TaskDetailsPage = function TaskDetailsPage(props) {\n  var createTask = useRef({\n    newTask: \"\",\n    subTasks: \"\",\n    tasksettings: \"\",\n    completed: \"no\"\n  });\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    startDate = _useState2[0],\n    setStartDate = _useState2[1];\n  var createNewTaskHandler = function createNewTaskHandler(newtask) {\n    var startDate = newtask.startDate;\n    setStartDate(startDate);\n    createTask.current[\"newTask\"] = newtask;\n    console.log(\"from edit task page\");\n    console.log(newtask);\n  };\n  var createSubtaskHandler = function createSubtaskHandler(subtasks) {\n    createTask.current[\"subTasks\"] = subtasks;\n    console.log(\"from edit task page\");\n    console.log(subtasks);\n  };\n  var taskSettingsHandler = function taskSettingsHandler(tasksettings) {\n    createTask.current[\"tasksettings\"] = tasksettings;\n    console.log(\"from edit task page\");\n    console.log(tasksettings);\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EditTask, {\n    onSaveNewTask: createNewTaskHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddSubtask, {\n    onSaveSubtask: createSubtaskHandler,\n    sendDate: startDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TaskSettings, {\n    onSaveTaskSettings: taskSettingsHandler,\n    task: Task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ScrollTop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\nexport default TaskDetailsPage;","map":{"version":3,"names":["React","useEffect","Fragment","useRef","useState","useParams","EditTask","AddSubtask","Header","TaskSettings","ScrollTop","Link","TaskDetailsPage","props","createTask","newTask","subTasks","tasksettings","completed","_useState","_useState2","_slicedToArray","startDate","setStartDate","createNewTaskHandler","newtask","current","console","log","createSubtaskHandler","subtasks","taskSettingsHandler","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSaveNewTask","onSaveSubtask","sendDate","onSaveTaskSettings","task","Task"],"sources":["C:/Rushali/SEAS/SUMMER 2023/Project/task-planner/src/components/TasksPage/TaskDetailsPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Fragment, useRef, useState} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport EditTask from \"./EditTask\";\r\nimport AddSubtask from \"../NewTaskPage/AddSubtask\";\r\nimport Header from \"../Header\";\r\nimport TaskSettings from \"../NewTaskPage/TaskSettings\";\r\nimport ScrollTop from \"../ScrollTop\";\r\n//import classes from \"./SaveButton.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst TaskDetailsPage = (props) => {\r\n\r\n  const createTask = useRef({\r\n    newTask: \"\",\r\n    subTasks: \"\",\r\n    tasksettings: \"\",\r\n    completed: \"no\",\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(\"\");\r\n\r\n  const createNewTaskHandler = (newtask) => {\r\n    const { startDate } = newtask;\r\n    setStartDate(startDate);\r\n    createTask.current[\"newTask\"] = newtask;\r\n    console.log(\"from edit task page\");\r\n    console.log(newtask);\r\n  };\r\n\r\n  const createSubtaskHandler = (subtasks) => {\r\n    createTask.current[\"subTasks\"] = subtasks;\r\n    console.log(\"from edit task page\");\r\n    console.log(subtasks);\r\n  };\r\n\r\n  const taskSettingsHandler = (tasksettings) => {\r\n    createTask.current[\"tasksettings\"] = tasksettings;\r\n    console.log(\"from edit task page\");\r\n    console.log(tasksettings);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <EditTask onSaveNewTask={createNewTaskHandler}/>\r\n      <AddSubtask onSaveSubtask={createSubtaskHandler} sendDate={startDate}/>\r\n      <TaskSettings onSaveTaskSettings={taskSettingsHandler} task={Task}/>\r\n      {/*<div className={classes[\"save-button-div\"]}>\r\n        <button className={classes[\"save-button\"]} onClick={createTaskHandler}>\r\n          <Link className={classes[\"save-button-text\"]}>Save Task</Link>\r\n        </button>\r\n      </div>*/}\r\n      <ScrollTop />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaskDetailsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}