{"ast":null,"code":"import _defineProperty from \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\src\\\\components\\\\TasksPage\\\\EditSubtask.js\";\nimport React from \"react\";\nimport { Fragment, useState, useRef, useEffect } from \"react\";\nimport styles from \"../NewTaskPage/AddTask.module.css\";\nimport classes from \"../NewTaskPage/AddSubtask.module.css\";\nimport SubTask from \"../NewTaskPage/SubTask\";\nimport style from \"../NewTaskPage/AddSubTaskButton.module.css\";\nimport '../NewTaskPage/SubTask.css';\nimport EditSubTaskForm from \"./EditSubTaskForm\";\nimport AddSubtaskForm from \"./AddSubtaskForm\";\nvar EditSubtask = function EditSubtask(props) {\n  /*const subtaskObjectHandler = (subtaskObject) => {\r\n    props.onSaveSubtask(subtaskObject);\r\n    console.log(props.sendDate);\r\n    \r\n  const date = props.sendDate;\r\n  };*/\n\n  var $set = useRef({});\n  var $addtoSet = useRef({});\n  /*const subTaskObject = useRef({\r\n  \r\n  });*/\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    subtaskForms = _useState2[0],\n    setSubtaskForms = _useState2[1]; //in the new subtask form the values have to be null...so using subtaskForm\n  var num = useRef(1);\n  useEffect(function () {\n    num.current = props.task.subTasks ? Object.keys(props.task.subTasks).length : 1;\n  }, [props.task]);\n\n  //adding new subtask forms dynamically\n  var addSubtaskHandler = function addSubtaskHandler() {\n    num.current++;\n    setSubtaskForms(function (prevForms) {\n      return [].concat(_toConsumableArray(prevForms), [/*#__PURE__*/React.createElement(AddSubtaskForm, {\n        num: num.current,\n        onSaveSubtask: onSaveSubtaskHandler2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 49\n        }\n      })]);\n    });\n  };\n  var onSaveSubtaskHandler1 = function onSaveSubtaskHandler1(subtaskObject) {\n    var id = subtaskObject.id;\n    subTaskObject.current = _objectSpread({}, subTaskObject.current, {\n      $set: _objectSpread({}, subTaskObject.current.$set, _defineProperty({}, id, subtaskObject))\n    });\n\n    //console.log(subTaskObject.current);\n    var obj = subTaskObject.current;\n    props.onSaveSubtask(obj);\n  };\n  var onSaveSubtaskHandler2 = function onSaveSubtaskHandler2(subtaskObject) {\n    var id = subtaskObject.id;\n    subTaskObject.current = _objectSpread({}, subTaskObject.current, {\n      $addtoSet: _defineProperty({}, id, subtaskObject)\n    });\n\n    //console.log(subTaskObject.current);\n    var obj = subTaskObject.current;\n    props.onSaveSubtask(obj);\n  };\n  var date = props.startDate;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"sub-task-div\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Edit sub-tasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"sub-task-tile\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sub-task-items-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, props.task.subTasks && Object.keys(props.task.subTasks).length != 0 ? Object.keys(props.task.subTasks).map(function (subtaskId) {\n    var subtask = props.task.subTasks[subtaskId];\n    return /*#__PURE__*/React.createElement(EditSubTaskForm, {\n      onSaveSubtask: onSaveSubtaskHandler1,\n      date: date,\n      subtask: subtask,\n      name: subtaskId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }\n    });\n  }) : \"No subtasks\", subtaskForms), /*#__PURE__*/React.createElement(\"div\", {\n    className: style[\"subtask-button-div\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addSubtaskHandler,\n    className: style[\"add-subtask-button\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: style[\"sub-task-button-label\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"+ New Sub-task\"))))));\n};\nexport default EditSubtask;","map":{"version":3,"names":["React","Fragment","useState","useRef","useEffect","styles","classes","SubTask","style","EditSubTaskForm","AddSubtaskForm","EditSubtask","props","$set","$addtoSet","_useState","_useState2","_slicedToArray","subtaskForms","setSubtaskForms","num","current","task","subTasks","Object","keys","length","addSubtaskHandler","prevForms","concat","_toConsumableArray","createElement","onSaveSubtask","onSaveSubtaskHandler2","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSaveSubtaskHandler1","subtaskObject","id","subTaskObject","_objectSpread","_defineProperty","obj","date","startDate","className","heading","map","subtaskId","subtask","name","onClick"],"sources":["C:/Rushali/SEAS/SUMMER 2023/Project/task-planner/src/components/TasksPage/EditSubtask.js"],"sourcesContent":["import React from \"react\";\r\nimport { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport styles from \"../NewTaskPage/AddTask.module.css\";\r\nimport classes from \"../NewTaskPage/AddSubtask.module.css\";\r\nimport SubTask from \"../NewTaskPage/SubTask\";\r\nimport style from \"../NewTaskPage/AddSubTaskButton.module.css\";\r\nimport '../NewTaskPage/SubTask.css';\r\nimport EditSubTaskForm from \"./EditSubTaskForm\";\r\nimport AddSubtaskForm from \"./AddSubtaskForm\"\r\n\r\nconst EditSubtask = (props) => {\r\n  /*const subtaskObjectHandler = (subtaskObject) => {\r\n    props.onSaveSubtask(subtaskObject);\r\n    console.log(props.sendDate);\r\n    \r\n  const date = props.sendDate;\r\n  };*/\r\n\r\n  const $set = useRef({});\r\n  const $addtoSet = useRef({});\r\n  /*const subTaskObject = useRef({\r\n  \r\n  });*/\r\n  const [subtaskForms, setSubtaskForms] = useState([]);\r\n\r\n//in the new subtask form the values have to be null...so using subtaskForm\r\n  const num = useRef(1);\r\n  useEffect(()=>{ \r\n    num.current = props.task.subTasks ? Object.keys(props.task.subTasks).length : 1;\r\n  },[props.task]);\r\n\r\n  //adding new subtask forms dynamically\r\n  const addSubtaskHandler = () => {\r\n    num.current++;\r\n    setSubtaskForms(prevForms => [...prevForms, <AddSubtaskForm num={num.current} onSaveSubtask={onSaveSubtaskHandler2} />]);\r\n    \r\n  };\r\n\r\n  const onSaveSubtaskHandler1 = (subtaskObject)=>{\r\n    const {id} = subtaskObject;\r\n\r\n    subTaskObject.current = {\r\n      ...subTaskObject.current,\r\n      $set:{\r\n        ...subTaskObject.current.$set,\r\n        [id]: subtaskObject,\r\n      }\r\n    };\r\n\r\n    //console.log(subTaskObject.current);\r\n    let obj = subTaskObject.current;\r\n    props.onSaveSubtask(obj);\r\n      \r\n  }\r\n\r\n  const onSaveSubtaskHandler2 = (subtaskObject)=>{\r\n    const {id} = subtaskObject;\r\n\r\n    subTaskObject.current = {\r\n      ...subTaskObject.current,\r\n      $addtoSet:{\r\n        [id]: subtaskObject,\r\n      }\r\n    };\r\n\r\n    //console.log(subTaskObject.current);\r\n    let obj = subTaskObject.current;\r\n    props.onSaveSubtask(obj);\r\n      \r\n  }\r\n\r\n  const date = props.startDate;\r\n  \r\n  return (\r\n    <Fragment>\r\n      <div className={classes[\"sub-task-div\"]}>\r\n        <div className={styles.heading}>Edit sub-tasks</div>\r\n        <div className={classes[\"sub-task-tile\"]}>\r\n          {/*<SubTask subtaskObject={subtaskObjectHandler} startDate={date} />*/}\r\n          <div className=\"sub-task-items-div\">\r\n          {props.task.subTasks && Object.keys(props.task.subTasks).length!=0 ? Object.keys(props.task.subTasks).map((subtaskId)=>\r\n          {\r\n            const subtask = props.task.subTasks[subtaskId];\r\n          return <EditSubTaskForm\r\n              onSaveSubtask={onSaveSubtaskHandler1}\r\n              date={date}\r\n              subtask={subtask}\r\n              name={subtaskId}\r\n            ></EditSubTaskForm>\r\n        }): \"No subtasks\"}\r\n            {subtaskForms}\r\n          </div>\r\n          <div className={style[\"subtask-button-div\"]}>\r\n            <button\r\n              onClick={addSubtaskHandler}\r\n              className={style[\"add-subtask-button\"]}\r\n            >\r\n              <a className={style[\"sub-task-button-label\"]}>+ New Sub-task</a>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditSubtask;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}