{"ast":null,"code":"import _slicedToArray from \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\src\\\\components\\\\NewTaskPage\\\\AddTask.js\";\nimport React, { Fragment, useState } from \"react\";\nimport classes from \"./AddTask.module.css\";\nimport NewTaskForm from \"./NewTaskForm\";\nvar AddTask = function AddTask(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    submitError = _useState2[0],\n    setSubmitError = _useState2[1];\n  var isObjectEmpty = function isObjectEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var onSaveHandler = function onSaveHandler(addTaskData, errorObj) {\n    console.log(errorObj);\n    console.log(isObjectEmpty(errorObj));\n    //also check if the required terms are not empty!!\n    if (!isObjectEmpty(errorObj)) {\n      setSubmitError(true);\n    } else {\n      props.onSaveNewTask(addTaskData);\n      setSubmitError(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.newTaskDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Add a new task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.newTaskTile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewTaskForm, {\n    onSave: onSaveHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), submitError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }, \"Please enter valid inputs.\"))));\n};\nexport default AddTask;","map":{"version":3,"names":["React","Fragment","useState","classes","NewTaskForm","AddTask","props","_useState","_useState2","_slicedToArray","submitError","setSubmitError","isObjectEmpty","obj","key","hasOwnProperty","onSaveHandler","addTaskData","errorObj","console","log","onSaveNewTask","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","newTaskDiv","heading","newTaskTile","onSave"],"sources":["C:/Rushali/SEAS/SUMMER 2023/Project/task-planner/src/components/NewTaskPage/AddTask.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport classes from \"./AddTask.module.css\";\r\nimport NewTaskForm from \"./NewTaskForm\";\r\n\r\nconst AddTask = (props) => {\r\n  const [submitError,setSubmitError] = useState(false);\r\n\r\n  const isObjectEmpty = (obj) => {\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n    const onSaveHandler = (addTaskData, errorObj)=>{\r\n      console.log(errorObj)\r\n      console.log(isObjectEmpty(errorObj))\r\n      //also check if the required terms are not empty!!\r\n        if(!isObjectEmpty(errorObj)){\r\n          setSubmitError(true);\r\n        }\r\n        else{\r\n          props.onSaveNewTask(addTaskData);\r\n          setSubmitError(false);\r\n        }\r\n        \r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.newTaskDiv}>\r\n        <div className={classes.heading}>Add a new task</div>\r\n        <div className={classes.newTaskTile}>\r\n          <NewTaskForm onSave={onSaveHandler}/>\r\n          {submitError && <p>Please enter valid inputs.</p>}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,eAAe;AAEvC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAK;EAAA,IAAAC,SAAA,GACYL,QAAQ,CAAC,KAAK,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAACG,cAAc,GAAAH,UAAA;EAEjC,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAG,EAAK;IAC7B,KAAK,IAAIC,GAAG,IAAID,GAAG,EAAE;MACnB,IAAIA,GAAG,CAACE,cAAc,CAACD,GAAG,CAAC,EAAE;QAC3B,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAEC,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,WAAW,EAAEC,QAAQ,EAAG;IAC7CC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrBC,OAAO,CAACC,GAAG,CAACR,aAAa,CAACM,QAAQ,CAAC,CAAC;IACpC;IACE,IAAG,CAACN,aAAa,CAACM,QAAQ,CAAC,EAAC;MAC1BP,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MACG;MACFL,KAAK,CAACe,aAAa,CAACJ,WAAW,CAAC;MAChCN,cAAc,CAAC,KAAK,CAAC;IACvB;EAEJ,CAAC;EAEH,oBACEX,KAAA,CAAAsB,aAAA,CAACrB,QAAQ;IAAAsB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACP7B,KAAA,CAAAsB,aAAA;IAAKQ,SAAS,EAAE3B,OAAO,CAAC4B,UAAW;IAAAR,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjC7B,KAAA,CAAAsB,aAAA;IAAKQ,SAAS,EAAE3B,OAAO,CAAC6B,OAAQ;IAAAT,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAmB,CAAC,eACrD7B,KAAA,CAAAsB,aAAA;IAAKQ,SAAS,EAAE3B,OAAO,CAAC8B,WAAY;IAAAV,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClC7B,KAAA,CAAAsB,aAAA,CAAClB,WAAW;IAAC8B,MAAM,EAAElB,aAAc;IAAAO,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,EACpCnB,WAAW,iBAAIV,KAAA,CAAAsB,aAAA;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,4BAA6B,CAC7C,CACF,CACG,CAAC;AAEf,CAAC;AAED,eAAexB,OAAO"},"metadata":{},"sourceType":"module"}