{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Rushali\\\\SEAS\\\\SUMMER 2023\\\\Project\\\\task-planner\\\\src\\\\components\\\\HomePage\\\\BacklogTile.js\";\nimport React from \"react\";\nimport classes from \"./OngoingTile.module.css\";\nimport { RiPencilFill, RiDeleteBin5Line } from \"react-icons/ri\";\nimport ProgressBar from \"./ProgressBar\";\nvar BacklogTile = function BacklogTile(props) {\n  var subtasksTotal = 4;\n  var subtasksDone = 2;\n  var progress = \"\".concat(subtasksDone / subtasksTotal * 100);\n\n  //for due date\n  var date = new Date(props.task.newTask.deadline);\n  var day = date.getDate();\n  var month = date.toLocaleString(\"defualt\", {\n    month: \"long\"\n  }).toUpperCase();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '230px'\n    },\n    className: classes.tileBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tileHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.taskName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, props.task.newTask.taskTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.priorityBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Priority: \", props.task.tasksettings.priority), /*#__PURE__*/React.createElement(RiPencilFill, {\n    className: classes.optionIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RiDeleteBin5Line, {\n    className: classes.optionIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bodyTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Progress:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bodyTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bodyTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Sub-tasks done: \", subtasksDone, \"/\", subtasksTotal), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bodyTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Rewards: \", props.task.tasksettings.reward == \"\" ? /*#__PURE__*/React.createElement(React.Fragment, null, \"No rewards\") : /*#__PURE__*/React.createElement(React.Fragment, null, props.task.tasksettings.reward)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dueDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"DUE DATE: \", day, \" \", month), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.completedCheckBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"completed\",\n    id: \"completed\",\n    value: \"isCompleted\",\n    className: classes.checkBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"completed\",\n    className: classes.checkBoxLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Mark as completed\"))));\n};\nexport default BacklogTile;","map":{"version":3,"names":["React","classes","RiPencilFill","RiDeleteBin5Line","ProgressBar","BacklogTile","props","subtasksTotal","subtasksDone","progress","concat","date","Date","task","newTask","deadline","day","getDate","month","toLocaleString","toUpperCase","createElement","className","tile","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","height","tileBody","tileHeader","taskName","taskTitle","options","priorityBox","tasksettings","priority","optionIcon","bodyTitle","reward","Fragment","dueDate","completedCheckBox","type","name","id","value","checkBox","for","checkBoxLabel"],"sources":["C:/Rushali/SEAS/SUMMER 2023/Project/task-planner/src/components/HomePage/BacklogTile.js"],"sourcesContent":["import React from \"react\";\r\nimport classes from \"./OngoingTile.module.css\";\r\nimport { RiPencilFill, RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst BacklogTile = (props) => {\r\n  const subtasksTotal = 4;\r\n  const subtasksDone = 2;\r\n  const progress = `${(subtasksDone / subtasksTotal) * 100}`;\r\n\r\n  //for due date\r\n  const date = new Date(props.task.newTask.deadline);\r\n  const day = date.getDate();\r\n  const month = date.toLocaleString(\"defualt\",{month: \"long\"}).toUpperCase();\r\n\r\n  return (\r\n    <div className={classes.tile}>\r\n      <div style={{height:'230px'}}className={classes.tileBody}>\r\n        <div className={classes.tileHeader}>\r\n          <div className={classes.taskName}>{props.task.newTask.taskTitle}</div>\r\n          <div className={classes.options}>\r\n            <div className={classes.priorityBox}>Priority: {props.task.tasksettings.priority}</div>\r\n            <RiPencilFill className={classes.optionIcon} />\r\n            <RiDeleteBin5Line className={classes.optionIcon} />\r\n          </div>\r\n        </div>\r\n        <div className={classes.bodyTitle}>Progress:</div>\r\n        <div className={classes.bodyTitle}>\r\n          <ProgressBar progress={progress}></ProgressBar>\r\n        </div>\r\n        <div className={classes.bodyTitle}>\r\n          Sub-tasks done: {subtasksDone}/{subtasksTotal}\r\n        </div>\r\n        <div className={classes.bodyTitle}>Rewards: {props.task.tasksettings.reward==\"\"?<>No rewards</>:<>{props.task.tasksettings.reward}</>}</div>\r\n        <div className={classes.dueDate}>DUE DATE: {day} {month}</div>\r\n        \r\n        <div className={classes.completedCheckBox}>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"completed\"\r\n            id=\"completed\"\r\n            value=\"isCompleted\"\r\n            className={classes.checkBox}\r\n          />\r\n          <label for=\"completed\" className={classes.checkBoxLabel}>Mark as completed</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BacklogTile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}