{"ast":null,"code":"import memoize from 'lodash.memoize';\nfunction resolver(options) {\n  return JSON.stringify(options);\n}\nfunction uniqDefined(arr) {\n  return arr.filter(function (el, index) {\n    return el && arr.indexOf(el) === index;\n  });\n}\nfunction isAllLowerCase(el) {\n  return el.toLowerCase() === el;\n}\nfunction normalizeLocale(el) {\n  if (!el || el.indexOf('-') === -1 || !isAllLowerCase(el)) {\n    return el;\n  }\n  var _a = el.split('-'),\n    _b = _a[0],\n    splitEl1 = _b === void 0 ? '' : _b,\n    _c = _a[1],\n    splitEl2 = _c === void 0 ? '' : _c;\n  return \"\".concat(splitEl1, \"-\").concat(splitEl2.toUpperCase());\n}\nfunction getUserLocalesInternal(_a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.useFallbackLocale,\n    useFallbackLocale = _c === void 0 ? true : _c,\n    _d = _b.fallbackLocale,\n    fallbackLocale = _d === void 0 ? 'en-US' : _d;\n  var languageList = [];\n  if (typeof navigator !== 'undefined') {\n    languageList = languageList.concat(navigator.languages, navigator.language);\n  }\n  if (useFallbackLocale) {\n    languageList.push(fallbackLocale);\n  }\n  return uniqDefined(languageList).map(normalizeLocale);\n}\nexport var getUserLocales = memoize(getUserLocalesInternal, resolver);\nfunction getUserLocaleInternal(options) {\n  return getUserLocales(options)[0] || null;\n}\nexport var getUserLocale = memoize(getUserLocaleInternal, resolver);\nexport default getUserLocale;","map":null,"metadata":{},"sourceType":"module"}